on:
  push:
    branches: [ testactions ]
    tags:        
      - v1.*

name: Create new EarlyBird release

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.15
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Build project
        run: ./build.sh
      - name: Create Release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}-${{ github.run_number }}
          release_name: Release ${{ github.ref }}-${{ github.run_number }}
          draft: false
          prerelease: false
      - name: Upload Linux Release Asset
        id: upload-linux 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ./binaries/go-earlybird-linux
          asset_name: go-earlybird-linux
          asset_content_type: application/octet-stream
      - name: Upload macOS Release Asset
        id: upload-macos
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ./binaries/go-earlybird
          asset_name: go-earlybird-macos
          asset_content_type: application/octet-stream
      - name: Upload Windows Release Asset
        id: upload-windows
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ./binaries/go-earlybird.exe
          asset_name: go-earlybird.exe
          asset_content_type: application/x-msdownload
